<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d0/d5f/simple__json__array_8h" kind="file" language="C++">
    <compoundname>simple_json_array.h</compoundname>
    <includes refid="de/d40/simple__json__value_8h" local="yes">simple_json_value.h</includes>
    <includes refid="d1/d2e/simple__json__list_8h" local="yes">simple_json_list.h</includes>
    <includes refid="d4/dd1/simple__json__string_8h" local="yes">simple_json_string.h</includes>
    <includedby refid="d4/db4/simple__json__array_8c" local="yes">/home/djkehoe/git/simple_json/src/simple_json_array.c</includedby>
    <includedby refid="d1/d6a/simple__json__parse_8c" local="yes">/home/djkehoe/git/simple_json/src/simple_json_parse.c</includedby>
    <includedby refid="d1/d15/simple__json_8h" local="yes">/home/djkehoe/git/simple_json/include/simple_json.h</includedby>
    <incdepgraph>
      <node id="169">
        <label>/home/djkehoe/git/simple_json/include/simple_json_array.h</label>
        <link refid="simple_json_array.h"/>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>simple_json_string.h</label>
        <link refid="d4/dd1/simple__json__string_8h"/>
      </node>
      <node id="170">
        <label>simple_json_value.h</label>
        <link refid="de/d40/simple__json__value_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>simple_json_list.h</label>
        <link refid="d1/d2e/simple__json__list_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="173">
        <label>/home/djkehoe/git/simple_json/include/simple_json_array.h</label>
        <link refid="simple_json_array.h"/>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>/home/djkehoe/git/simple_json/src/simple_json_parse.c</label>
        <link refid="d1/d6a/simple__json__parse_8c"/>
      </node>
      <node id="177">
        <label>/home/djkehoe/git/simple_json/src/simple_json.c</label>
        <link refid="df/d03/simple__json_8c"/>
      </node>
      <node id="174">
        <label>/home/djkehoe/git/simple_json/src/simple_json_array.c</label>
        <link refid="d4/db4/simple__json__array_8c"/>
      </node>
      <node id="178">
        <label>/home/djkehoe/git/simple_json/src/simple_json_object.c</label>
        <link refid="d1/d00/simple__json__object_8c"/>
      </node>
      <node id="176">
        <label>/home/djkehoe/git/simple_json/include/simple_json.h</label>
        <link refid="d1/d15/simple__json_8h"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>/home/djkehoe/git/simple_json/src/simple_json_string.c</label>
        <link refid="d9/dc8/simple__json__string_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/d5f/simple__json__array_8h_1a260c8407db429ec48b0fcc342fd35416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
        <definition>SJson* sj_array_new</definition>
        <argsstring>()</argsstring>
        <name>sj_array_new</name>
        <briefdescription>
<para>allocate a new empty json array </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>NULL on memory allocation error, an empty SJson array otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/include/simple_json_array.h" line="8" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_array.c" bodystart="38" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d0/d5f/simple__json__array_8h_1a97f6a40db68a7746dfda2c292f01f500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sj_array_free</definition>
        <argsstring>(SJson *array)</argsstring>
        <name>sj_array_free</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/include/simple_json_array.h" line="10" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_array.c" bodystart="51" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="d0/d5f/simple__json__array_8h_1a629448a3bf8473e0b3b5f698245524d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sj_array_append</definition>
        <argsstring>(SJson *array, SJson *value)</argsstring>
        <name>sj_array_append</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>append to a JSON array a new value </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>the JSON array to append to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to add to the string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>: this is a no-op if array is not an actual JSON array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/include/simple_json_array.h" line="12" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_array.c" bodystart="72" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="d0/d5f/simple__json__array_8h_1a20ad06b79ca3a69a5384a188d461eec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
        <definition>SJson* sj_array_get_nth</definition>
        <argsstring>(SJson *array, int n)</argsstring>
        <name>sj_array_get_nth</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>retrieve the nth element in the json array </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>the array to search through </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the element to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL on error (check <ref refid="d8/d02/simple__json__error_8c_1a5d74fc3dd2997bd985966f6c31e241de" kindref="member">sj_get_error()</ref>) or the SJson value otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/include/simple_json_array.h" line="14" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_array.c" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d0/d5f/simple__json__array_8h_1aa859c399a33ade6938aff698dd7f3f8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref> *</type>
        <definition>SJString* sj_array_get_nth_as_string</definition>
        <argsstring>(SJson *array, int n)</argsstring>
        <name>sj_array_get_nth_as_string</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>retrieve the nth element in the json array assumed to be a string </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>the array to search through </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the element to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL on error (check <ref refid="d8/d02/simple__json__error_8c_1a5d74fc3dd2997bd985966f6c31e241de" kindref="member">sj_get_error()</ref>) or the <ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref> value otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/include/simple_json_array.h" line="22" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_array.c" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="d0/d5f/simple__json__array_8h_1a4817507a839db8dd1524a3b6e15e4a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref> *</type>
        <definition>SJString* sj_array_to_json_string</definition>
        <argsstring>(SJson *array)</argsstring>
        <name>sj_array_to_json_string</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
<para>get the contents of the array as a formatted json string for output </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>the json array to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a formatted json character array &quot;[*,*,....]&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/include/simple_json_array.h" line="29" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_array.c" bodystart="95" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__SIMPLE_JSON_ARRAY_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SIMPLE_JSON_ARRAY_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d40/simple__json__value_8h" kindref="compound">simple_json_value.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d2e/simple__json__list_8h" kindref="compound">simple_json_list.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/dd1/simple__json__string_8h" kindref="compound">simple_json_string.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d0/d5f/simple__json__array_8h_1a260c8407db429ec48b0fcc342fd35416" kindref="member">sj_array_new</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d5f/simple__json__array_8h_1a97f6a40db68a7746dfda2c292f01f500" kindref="member">sj_array_free</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d5f/simple__json__array_8h_1a629448a3bf8473e0b3b5f698245524d5" kindref="member">sj_array_append</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>,<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*value);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d0/d5f/simple__json__array_8h_1a20ad06b79ca3a69a5384a188d461eec7" kindref="member">sj_array_get_nth</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref><sp/>*<ref refid="d0/d5f/simple__json__array_8h_1aa859c399a33ade6938aff698dd7f3f8d" kindref="member">sj_array_get_nth_as_string</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref><sp/>*<ref refid="d0/d5f/simple__json__array_8h_1a4817507a839db8dd1524a3b6e15e4a5c" kindref="member">sj_array_to_json_string</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/djkehoe/git/simple_json/include/simple_json_array.h"/>
  </compounddef>
</doxygen>
