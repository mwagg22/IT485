<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d1/d00/simple__json__object_8c" kind="file" language="C++">
    <compoundname>simple_json_object.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="d1/d15/simple__json_8h" local="yes">simple_json.h</includes>
    <includes refid="dd/d32/simple__json__object_8h" local="yes">simple_json_object.h</includes>
    <includes refid="d1/d2e/simple__json__list_8h" local="yes">simple_json_list.h</includes>
    <includes refid="d4/dd1/simple__json__string_8h" local="yes">simple_json_string.h</includes>
    <includes refid="d6/d6f/simple__json__error_8h" local="yes">simple_json_error.h</includes>
    <incdepgraph>
      <node id="282">
        <label>simple_json_array.h</label>
        <link refid="d0/d5f/simple__json__array_8h"/>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="284">
        <label>simple_json_string.h</label>
        <link refid="d4/dd1/simple__json__string_8h"/>
      </node>
      <node id="279">
        <label>stdlib.h</label>
      </node>
      <node id="283">
        <label>simple_json_value.h</label>
        <link refid="de/d40/simple__json__value_8h"/>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="278">
        <label>string.h</label>
      </node>
      <node id="286">
        <label>simple_json_error.h</label>
        <link refid="d6/d6f/simple__json__error_8h"/>
      </node>
      <node id="276">
        <label>/home/djkehoe/git/simple_json/src/simple_json_object.c</label>
        <link refid="simple_json_object.c"/>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
      </node>
      <node id="281">
        <label>simple_json_list.h</label>
        <link refid="d1/d2e/simple__json__list_8h"/>
      </node>
      <node id="285">
        <label>simple_json_object.h</label>
        <link refid="dd/d32/simple__json__object_8h"/>
        <childnode refid="283" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>stdio.h</label>
      </node>
      <node id="280">
        <label>simple_json.h</label>
        <link refid="d1/d15/simple__json_8h"/>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="dd/d6d/structSJPair" prot="public">SJPair</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1ac9279570a1d0982dc3dc5922d16bb8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sj_object_check</definition>
        <argsstring>(SJson *json)</argsstring>
        <name>sj_object_check</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="10" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="10" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1ad210f07fe056b70dde9016be25a58f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sj_pair_free</definition>
        <argsstring>(SJPair *pair)</argsstring>
        <name>sj_pair_free</name>
        <param>
          <type><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref> *</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="30" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1af279ef2e270d540b32966341d99ca9d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref> *</type>
        <definition>SJPair* sj_pair_new</definition>
        <argsstring>(char *key, SJson *value)</argsstring>
        <name>sj_pair_new</name>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="38" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="38" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1aa46bc64eb14588bd121eae3e33ca0d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sj_object_insert</definition>
        <argsstring>(SJson *object, char *key, SJson *value)</argsstring>
        <name>sj_object_insert</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>insert data into a json object </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>the json object to insert into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to identify the object value with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the key </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>: this is a no-op if object is not an actual JSON object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="58" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="58" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1a6575a559909011ed29ad547772ce0eaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
        <definition>SJson* sj_object_copy</definition>
        <argsstring>(SJson *json)</argsstring>
        <name>sj_object_copy</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="69" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="69" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1a717d1569ffe0ec2d861fa4769ab3c922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
        <definition>SJson* sj_object_new</definition>
        <argsstring>()</argsstring>
        <name>sj_object_new</name>
        <briefdescription>
<para>allocate a new empty json object </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>NULL on memory allocation error, an empty SJson object otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="87" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="87" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1a9d320f7ff286eb0bbd66041daa2df54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sj_object_free</definition>
        <argsstring>(SJson *object)</argsstring>
        <name>sj_object_free</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>free a previously allocated json object </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="100" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="100" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1a60c5fe467a0603fea5b0385b6f7f9bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
        <definition>SJson* sj_object_get_value</definition>
        <argsstring>(SJson *object, char *key)</argsstring>
        <name>sj_object_get_value</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>get the json value from an object given a key </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>the hson object to get </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key to search by </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL on error, or if no object provided or it is not of object or the key is not found, the value otherwise </para></simplesect>
<simplesect kind="note"><para>: the json returned is OWNED by the parent object do not free it. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="116" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="116" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1a53d11bf148fdebe3c7dc395f112bfc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* sj_object_get_value_as_string</definition>
        <argsstring>(SJson *object, char *key)</argsstring>
        <name>sj_object_get_value_as_string</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="134" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="134" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="d1/d00/simple__json__object_8c_1aca06194ca7cd567b57416b39dec671c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref> *</type>
        <definition>SJString* sj_object_to_json_string</definition>
        <argsstring>(SJson *object)</argsstring>
        <name>sj_object_to_json_string</name>
        <param>
          <type><ref refid="de/d40/simple__json__value_8h_1a3aa063084e242f19976eb9578480d4e2" kindref="member">SJson</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>get the json object back as a formatted json string </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL on error, or a string encapsulated ith {} </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c" line="143" column="1" bodyfile="/home/djkehoe/git/simple_json/src/simple_json_object.c" bodystart="143" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d15/simple__json_8h" kindref="compound">simple_json.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d32/simple__json__object_8h" kindref="compound">simple_json_object.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d2e/simple__json__list_8h" kindref="compound">simple_json_list.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/dd1/simple__json__string_8h" kindref="compound">simple_json_string.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d6f/simple__json__error_8h" kindref="compound">simple_json_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="d1/d00/simple__json__object_8c_1ac9279570a1d0982dc3dc5922d16bb8df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d1/d00/simple__json__object_8c_1ac9279570a1d0982dc3dc5922d16bb8df" kindref="member">sj_object_check</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*json)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(json-&gt;<ref refid="d9/dca/structSJson__S_1ad68edc13b2a814f9b920498ba439b8ba" kindref="member">sjtype</ref><sp/>!=<sp/><ref refid="de/d40/simple__json__value_8h_1a975dd883bf3002303e7ceda70d90d84ba679f450d8380d92ebbf906dd772a11ed" kindref="member">SJVT_Object</ref>)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d02/simple__json__error_8c_1ae0819d6f58f423e5d26ea66df15de81c" kindref="member">sj_set_error</ref>(</highlight><highlight class="stringliteral">&quot;sj_object:<sp/>expected<sp/>type<sp/>OBJECT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="dd/d6d/structSJPair" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26" refid="dd/d6d/structSJPair_1a23681f167b9eac4d55be408c2007ae6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref><sp/>*<ref refid="dd/d6d/structSJPair_1a23681f167b9eac4d55be408c2007ae6c" kindref="member">key</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="27" refid="dd/d6d/structSJPair_1aeee74c0e0e05940043b8aa96d1be43a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="dd/d6d/structSJPair_1aeee74c0e0e05940043b8aa96d1be43a4" kindref="member">value</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="d1/d00/simple__json__object_8c_1ad210f07fe056b70dde9016be25a58f26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d00/simple__json__object_8c_1ad210f07fe056b70dde9016be25a58f26" kindref="member">sj_pair_free</ref>(<ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*pair)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pair)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dc8/simple__json__string_8c_1a353b46786c4eab028ec911ed8cafed2d" kindref="member">sj_string_free</ref>(pair-&gt;<ref refid="dd/d6d/structSJPair_1a23681f167b9eac4d55be408c2007ae6c" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d03/simple__json_8c_1aeb651d73582b498cf77fb178089d5848" kindref="member">sj_free</ref>(pair-&gt;<ref refid="dd/d6d/structSJPair_1aeee74c0e0e05940043b8aa96d1be43a4" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>free(pair);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="d1/d00/simple__json__object_8c_1af279ef2e270d540b32966341d99ca9d0" refkind="member"><highlight class="normal"><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*<ref refid="d1/d00/simple__json__object_8c_1af279ef2e270d540b32966341d99ca9d0" kindref="member">sj_pair_new</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*value)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*pair;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>pair<sp/>=<sp/>(<ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref>));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pair)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d02/simple__json__error_8c_1ae0819d6f58f423e5d26ea66df15de81c" kindref="member">sj_set_error</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>allocate<sp/>data<sp/>for<sp/>new<sp/>data<sp/>pair<sp/>in<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>pair-&gt;<ref refid="dd/d6d/structSJPair_1a23681f167b9eac4d55be408c2007ae6c" kindref="member">key</ref><sp/>=<sp/><ref refid="d9/dc8/simple__json__string_8c_1a19fb85f2c3fecae2deb8978d8aba4724" kindref="member">sj_string_new_text</ref>(key);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pair-&gt;<ref refid="dd/d6d/structSJPair_1a23681f167b9eac4d55be408c2007ae6c" kindref="member">key</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d00/simple__json__object_8c_1ad210f07fe056b70dde9016be25a58f26" kindref="member">sj_pair_free</ref>(pair);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d02/simple__json__error_8c_1ae0819d6f58f423e5d26ea66df15de81c" kindref="member">sj_set_error</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>set<sp/>key<sp/>for<sp/>object<sp/>pair&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>pair-&gt;<ref refid="dd/d6d/structSJPair_1aeee74c0e0e05940043b8aa96d1be43a4" kindref="member">value</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="dd/d32/simple__json__object_8h_1aa46bc64eb14588bd121eae3e33ca0d94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d00/simple__json__object_8c_1aa46bc64eb14588bd121eae3e33ca0d94" kindref="member">sj_object_insert</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*value)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*pair;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d1/d00/simple__json__object_8c_1ac9279570a1d0982dc3dc5922d16bb8df" kindref="member">sj_object_check</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pair<sp/>=<sp/><ref refid="d1/d00/simple__json__object_8c_1af279ef2e270d540b32966341d99ca9d0" kindref="member">sj_pair_new</ref>(key,value);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pair)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dc8/simple__json__list_8c_1a45a595f33a0cf30ff2e205a3571c7507" kindref="member">sj_list_append</ref>(object-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>,pair);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="d1/d00/simple__json__object_8c_1a6575a559909011ed29ad547772ce0eaf" refkind="member"><highlight class="normal"><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d1/d00/simple__json__object_8c_1a6575a559909011ed29ad547772ce0eaf" kindref="member">sj_object_copy</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*json)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*pair;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*object;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,count;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="d1/d00/simple__json__object_8c_1a717d1569ffe0ec2d861fa4769ab3c922" kindref="member">sj_object_new</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a20c3361477b5a57bd46579d961277c23" kindref="member">sj_list_get_count</ref>(json-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a38cb6cd4286019d518ab87691e2693bc" kindref="member">sj_list_get_nth</ref>(json-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>,i);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pair)</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d00/simple__json__object_8c_1aa46bc64eb14588bd121eae3e33ca0d94" kindref="member">sj_object_insert</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,pair-&gt;<ref refid="dd/d6d/structSJPair_1a23681f167b9eac4d55be408c2007ae6c" kindref="member">key</ref>-&gt;<ref refid="d4/d1f/structSJString_1a623eb7be189beccc29815162623ef0ca" kindref="member">text</ref>,<ref refid="df/d03/simple__json_8c_1a0246b1c8e7295c1da2ce775389ee30e3" kindref="member">sj_copy</ref>(pair-&gt;<ref refid="dd/d6d/structSJPair_1aeee74c0e0e05940043b8aa96d1be43a4" kindref="member">value</ref>));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="d1/d15/simple__json_8h_1a717d1569ffe0ec2d861fa4769ab3c922" refkind="member"><highlight class="normal"><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d1/d00/simple__json__object_8c_1a717d1569ffe0ec2d861fa4769ab3c922" kindref="member">sj_object_new</ref>()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*object;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/><ref refid="df/d03/simple__json_8c_1a17b72c84ece910c9365592ac297fa52b" kindref="member">sj_new</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;sjtype<sp/>=<sp/><ref refid="de/d40/simple__json__value_8h_1a975dd883bf3002303e7ceda70d90d84ba679f450d8380d92ebbf906dd772a11ed" kindref="member">SJVT_Object</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;v.array<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a78de0f56ef6afe7c22f0ebd4933607de" kindref="member">sj_list_new</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;json_free<sp/>=<sp/><ref refid="d1/d00/simple__json__object_8c_1a9d320f7ff286eb0bbd66041daa2df54f" kindref="member">sj_object_free</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;get_string<sp/>=<sp/><ref refid="d1/d00/simple__json__object_8c_1aca06194ca7cd567b57416b39dec671c2" kindref="member">sj_object_to_json_string</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;copy<sp/>=<sp/><ref refid="d1/d00/simple__json__object_8c_1a6575a559909011ed29ad547772ce0eaf" kindref="member">sj_object_copy</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="dd/d32/simple__json__object_8h_1a9d320f7ff286eb0bbd66041daa2df54f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d00/simple__json__object_8c_1a9d320f7ff286eb0bbd66041daa2df54f" kindref="member">sj_object_free</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,count;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*pair;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d1/d00/simple__json__object_8c_1ac9279570a1d0982dc3dc5922d16bb8df" kindref="member">sj_object_check</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a20c3361477b5a57bd46579d961277c23" kindref="member">sj_list_get_count</ref>(object-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a38cb6cd4286019d518ab87691e2693bc" kindref="member">sj_list_get_nth</ref>(object-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>,i);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pair)</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d00/simple__json__object_8c_1ad210f07fe056b70dde9016be25a58f26" kindref="member">sj_pair_free</ref>(pair);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dc8/simple__json__list_8c_1a4498df009cb743e4161f4b5a3fe3e7d8" kindref="member">sj_list_delete</ref>(object-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>free(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="d1/d15/simple__json_8h_1a60c5fe467a0603fea5b0385b6f7f9bd0" refkind="member"><highlight class="normal"><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*<ref refid="d1/d00/simple__json__object_8c_1a60c5fe467a0603fea5b0385b6f7f9bd0" kindref="member">sj_object_get_value</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,count;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*pair;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d1/d00/simple__json__object_8c_1ac9279570a1d0982dc3dc5922d16bb8df" kindref="member">sj_object_check</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a20c3361477b5a57bd46579d961277c23" kindref="member">sj_list_get_count</ref>(object-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a38cb6cd4286019d518ab87691e2693bc" kindref="member">sj_list_get_nth</ref>(object-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>,i);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pair)</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d9/dc8/simple__json__string_8c_1a7b567767503b42cee4fab510889c6d10" kindref="member">sj_string_cmp</ref>(pair-&gt;<ref refid="dd/d6d/structSJPair_1a23681f167b9eac4d55be408c2007ae6c" kindref="member">key</ref>,key)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair-&gt;<ref refid="dd/d6d/structSJPair_1aeee74c0e0e05940043b8aa96d1be43a4" kindref="member">value</ref>;<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="d1/d00/simple__json__object_8c_1a53d11bf148fdebe3c7dc395f112bfc25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d1/d00/simple__json__object_8c_1a53d11bf148fdebe3c7dc395f112bfc25" kindref="member">sj_object_get_value_as_string</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*value;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/><ref refid="d1/d00/simple__json__object_8c_1a60c5fe467a0603fea5b0385b6f7f9bd0" kindref="member">sj_object_get_value</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,key);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value-&gt;<ref refid="d9/dca/structSJson__S_1ad68edc13b2a814f9b920498ba439b8ba" kindref="member">sjtype</ref><sp/>!=<sp/><ref refid="de/d40/simple__json__value_8h_1a975dd883bf3002303e7ceda70d90d84baeae45031d36ea78eca76b491c49798ad" kindref="member">SJVT_String</ref>)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/dc8/simple__json__string_8c_1a92598a33ebf9c9c6ee36109b9eac0a7a" kindref="member">sj_string_get_text</ref>(value-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1ab50f7c395b214eb050ff59e3a9bbeb4a" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="dd/d32/simple__json__object_8h_1aca06194ca7cd567b57416b39dec671c2" refkind="member"><highlight class="normal"><ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref><sp/>*<ref refid="d1/d00/simple__json__object_8c_1aca06194ca7cd567b57416b39dec671c2" kindref="member">sj_object_to_json_string</ref>(<ref refid="d9/dca/structSJson__S" kindref="compound">SJson</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d1f/structSJString" kindref="compound">SJString</ref><sp/>*<ref refid="d9/dca/structSJson__S_1ab50f7c395b214eb050ff59e3a9bbeb4a" kindref="member">string</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d6d/structSJPair" kindref="compound">SJPair</ref><sp/>*pair;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>count;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>=<sp/><ref refid="d9/dc8/simple__json__string_8c_1a19fb85f2c3fecae2deb8978d8aba4724" kindref="member">sj_string_new_text</ref>(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a20c3361477b5a57bd46579d961277c23" kindref="member">sj_list_get_count</ref>(object-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair<sp/>=<sp/><ref refid="d4/dc8/simple__json__list_8c_1a38cb6cd4286019d518ab87691e2693bc" kindref="member">sj_list_get_nth</ref>(object-&gt;<ref refid="d9/dca/structSJson__S_1a34c41be372d7bbe614b312cef2051b99" kindref="member">v</ref>.<ref refid="d9/dca/structSJson__S_1aa8c595b7789550a64b08950b0ad88e1e" kindref="member">array</ref>,i);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pair)</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc8/simple__json__string_8c_1ad594e541b3295d09556a22184c8be97d" kindref="member">sj_string_append</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc8/simple__json__string_8c_1a98eb51563c6501a48e8385ac7638c244" kindref="member">sj_string_concat</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,pair-&gt;<ref refid="dd/d6d/structSJPair_1a23681f167b9eac4d55be408c2007ae6c" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc8/simple__json__string_8c_1ad594e541b3295d09556a22184c8be97d" kindref="member">sj_string_append</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;\&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc8/simple__json__string_8c_1a98eb51563c6501a48e8385ac7638c244" kindref="member">sj_string_concat</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<ref refid="df/d03/simple__json_8c_1ace951db871c87f7cc400d4b5201092e5" kindref="member">sj_value_to_json_string</ref>(pair-&gt;<ref refid="dd/d6d/structSJPair_1aeee74c0e0e05940043b8aa96d1be43a4" kindref="member">value</ref>));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+1<sp/>&lt;<sp/>count)<ref refid="d9/dc8/simple__json__string_8c_1ad594e541b3295d09556a22184c8be97d" kindref="member">sj_string_append</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dc8/simple__json__string_8c_1ad594e541b3295d09556a22184c8be97d" kindref="member">sj_string_append</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/dca/structSJson__S_1ab50f7c395b214eb050ff59e3a9bbeb4a" kindref="member">string</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*eol@eof*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/djkehoe/git/simple_json/src/simple_json_object.c"/>
  </compounddef>
</doxygen>
